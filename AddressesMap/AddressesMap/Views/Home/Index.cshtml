@{
    ViewBag.Title = "Home Page";
}

<script src="http://maps.google.com/maps/api/js?key=AIzaSyCZkVThZaYZD67Qivu2t-5WUHQayOTTUZ0" type="text/javascript"></script>
<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br />


<div class="form-group">
    <div id="map_canvas" style="height: 550px;"></div>
</div>
<div class="col-xs-5 selectContainer">
    <select id="subdivisions" class="form-control" name="size">
        <option disabled selected>Выберите ЖРЕО:</option>
    </select>
</div>

@*<button type="button" class="btn btn-danger dropdown-toggle">GetAddresses</button>*@



<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">

    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
            var Kiev = new google.maps.LatLng(50.4546600, 30.5238000);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 12,
            center: Kiev,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            $.get("http://localhost:4955/api/Subdivision", function (data, status) {
                $.each(data, function (i, item) {
                    $("#subdivisions").append("<option value=" + item["<SubdivisionId>k__BackingField"] + ">" + item["<SubdivisionName>k__BackingField"] + "</option>");
                });
            });



        // you can either make up a JSON list server side, or call it from a controller using JSONResult
            $("select").change(function () {
                $.post("http://localhost:4955/api/Addresses/AddressesBySubdivision/" + $("#subdivisions").val(), function (data, status) {
                    deleteMarkers();
                    $.each(data, function (i, item) {
                        marker = new google.maps.Marker({
                            'position': new google.maps.LatLng(item['<Latitude>k__BackingField'], item['<Longitude>k__BackingField']),
                            'map': map,
                            'title': item['<House>k__BackingField']
                        });
                        merkers.push(marker);
                        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');
                        // put in some information about each json object - in this case, the opening hours.
                        var infowindow = new google.maps.InfoWindow({
                            content: "<div class='infoDiv'><ul class='list-group'>" +
                            "<li class='list-group-item'> Номер дома: " + item['<House>k__BackingField'] + "</li>" +
                            "<li class='list-group-item'>Серия : " + item['<Serial>k__BackingField'] + "</li>" +
                            "<li class='list-group-item'>Количество этажей : " + item['<CountFloor>k__BackingField'] + "</li>" +
                            "<li class='list-group-item'>Количество входов : " + item['<CountEntrance>k__BackingField'] + "</li>" +
                            "<li class='list-group-item'>Координаты : " + item['<Latitude>k__BackingField'] + "° шир. " + item['<Longitude>k__BackingField'] + "° дол.</li>" +
                            "</ul></div>"
                        });
                        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                        google.maps.event.addListener(marker, 'click', function () {
                            infowindow.open(map, marker);
                        });
                    });
                });
            });
          }

            var map;
            var marker = [];
            var merkers = [];
            function setMapOnAll(map) {
                for (var i = 0; i < merkers.length; i++) {
                    merkers[i].setMap(map);
                }
            }
            function clearMarkers() {
                setMapOnAll(null);
            }
            function deleteMarkers() {
                clearMarkers();
                merkers = [];
            }


        </script>
    </section>
}
